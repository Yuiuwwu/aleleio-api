openapi: 3.0.0
x-stoplight:
  id: rria4fpm6hztp
info:
  title: alele.io
  version: 0.6.2
  description: alele.io is a public database of teambuilding games. The database is wrapped in a REST API (this specification!) which is available at alele.io/api and can be accessed through the web and mobile devices. It's a labour of love and relies on its community (you!) to survive and thrive.
  license:
    name: European Union Public License (EUPL) 1.2
    url: 'https://eupl.eu'
  contact: {}
servers: []
paths:
  /games:
    post:
      summary: Create one or several new games.
      operationId: games.create
      description: Create one or several games.
      responses:
        '201':
          $ref: '#/components/responses/GamesOut'
      requestBody:
        $ref: '#/components/requestBodies/GamesIn'
      tags:
        - update & create
    get:
      summary: Get all games in the database.
      tags:
        - games
      responses:
        '200':
          $ref: '#/components/responses/GamesOut'
      operationId: games.get_all
      description: Get a list of all existing games and their contents.
  '/games/{game_id}':
    parameters:
      - schema:
          type: string
        name: game_id
        in: path
        required: true
    get:
      summary: Get a single game by its ID.
      tags:
        - games
      responses:
        '200':
          $ref: '#/components/responses/GameOut'
      operationId: games.get_single
      description: Get information about one game by its unique ID.
    patch:
      summary: Update one or several properties of a single game.
      operationId: games.update_single
      responses:
        '200':
          description: OK
      tags:
        - update & create
    delete:
      summary: Delete a game by its ID.
      responses:
        '200':
          description: OK
      operationId: games.delete_single
      tags:
        - warning
  /references:
    get:
      summary: Get all references (linked sources) for games.
      responses:
        '201':
          $ref: '#/components/responses/ReferencesOut'
      operationId: terms.get_references
      tags:
        - meta
    post:
      summary: Create one or several new references (linked sources).
      responses:
        '200':
          $ref: '#/components/responses/ReferencesOut'
      operationId: terms.create_references
      requestBody:
        $ref: '#/components/requestBodies/ReferencesIn'
      tags:
        - update & create
  /collections:
    get:
      summary: Get all game collections.
      tags:
        - meta
      responses:
        '201':
          $ref: '#/components/responses/ReferencesOut'
      operationId: terms.get_collections
    post:
      summary: Create one or several new game collections.
      responses:
        '200':
          $ref: '#/components/responses/ReferencesOut'
      operationId: terms.create_collections
      requestBody:
        $ref: '#/components/requestBodies/ReferencesIn'
      tags:
        - update & create
    parameters: []
components:
  schemas:
    GameIn:
      type: object
      title: GameIn
      x-stoplight:
        id: 5umoytctch9rc
      additionalProperties: false
      description: Creating games with POST-requests to /games requires a json body with the following properties.
      properties:
        names:
          type: array
          description: A game can have more than one name.
          minItems: 1
          items:
            type: string
        descriptions:
          type: array
          minItems: 1
          items:
            type: string
        game_types:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/GameTypeEnum'
        game_lengths:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/GameLengthEnum'
        group_sizes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/GroupSizeEnum'
        group_needs:
          type: array
          items:
            type: object
            properties:
              slug:
                $ref: '#/components/schemas/GroupNeedsEnum'
              score:
                type: integer
        materials:
          type: array
          items:
            type: string
        prior_prep:
          type: string
        exhausting:
          type: boolean
          default: false
        touching:
          type: boolean
          default: false
        scalable:
          type: boolean
          default: false
        digital:
          type: boolean
          default: false
        license:
          $ref: '#/components/schemas/License'
        references:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
      required:
        - names
        - descriptions
        - game_types
        - game_lengths
        - group_sizes
    GameOut:
      type: object
      title: GameOut
      x-stoplight:
        id: 5umoytctch9rc
      additionalProperties: false
      properties:
        id:
          type: integer
        names:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              full:
                type: string
        descriptions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              text:
                type: string
        game_types:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                $ref: '#/components/schemas/Openapi_GameTypeEnum'
              full:
                type: string
        game_lengths:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                $ref: '#/components/schemas/Openapi_GameLengthEnum'
              full:
                type: string
        group_sizes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                $ref: '#/components/schemas/Openapi_GroupSizeEnum'
              full:
                type: string
        group_needs:
          type: array
          items:
            type: object
            properties:
              need:
                $ref: '#/components/schemas/GroupNeedsEnum'
              score:
                type: integer
        materials:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              full:
                type: string
              slug:
                type: string
        prior_prep:
          type: string
        touching:
          type: boolean
        scalable:
          type: boolean
        exhausting:
          type: boolean
        digital:
          type: boolean
        meta:
          type: object
          properties:
            author_id:
              type: integer
            timestamp:
              type: string
              format: date-time
        license:
          type: object
          properties:
            name:
              type: string
            url:
              type: string
            owner:
              type: string
            owner-url:
              type: string
        references:
          type: array
          items:
            type: object
            properties:
              slug:
                type: string
              full:
                type: string
              url:
                type: string
    License:
      title: License
      x-stoplight:
        id: xpdtjfbm4hh1a
      type: object
      description: License description.
      properties:
        name:
          type: string
        url:
          type: string
        owner:
          type: string
        owner-url:
          type: string
      required:
        - name
    Reference:
      title: Reference
      x-stoplight:
        id: b0i9u6cq03vk3
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        refers-to:
          type: string
    GameTypeEnum:
      type: string
      enum:
        - ice
        - ener
        - trust
        - prob
        - name
        - brain
        - song
        - race
        - gtk
      description: List of values for GameType. Using the enums defined here is a clear and consistent way to use the same abbreviations and full names everywhere.
      x-examples:
        example-1: ice
    GameLengthEnum:
      type: string
      enum:
        - short
        - medium
        - long
      x-examples: {}
    GroupSizeEnum:
      type: string
      enum:
        - small
        - large
        - multiple
        - event
    GroupNeedsEnum:
      type: string
      enum:
        - names
        - ener
        - hon
        - strat
        - insp
        - why
        - id
    Openapi_GameLengthEnum:
      type: string
      enum:
        - short
        - medium
        - long
      x-examples: {}
    Openapi_GameTypeEnum:
      type: string
      enum:
        - ice
        - ener
        - trust
        - prob
        - name
        - brain
        - song
        - race
        - gtk
      description: List of values for GameType. Using the enums defined here is a clear and consistent way to use the same abbreviations and full names everywhere.
      x-examples:
        example-1: ice
    Openapi_GroupSizeEnum:
      type: string
      enum:
        - small
        - large
        - multiple
        - event
  requestBodies:
    GamesIn:
      x-body-name: games
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GameIn'
    ReferencesIn:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
  responses:
    GameOut:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameOut'
    GamesOut:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            x-examples:
              example-1:
                name:
                  - string
                description:
                  - string
                material:
                  - {}
                prior_prep: string
                game_type:
                  - string
                game_length:
                  - string
                group_needs:
                  ener: 0
                  strat: 0
                group_size:
                  - string
                touching: string
            items:
              $ref: '#/components/schemas/GameOut'
    ReferencesOut:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
  parameters: {}
